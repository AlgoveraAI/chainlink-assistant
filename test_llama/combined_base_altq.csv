question,source,answer,result,retrieved_docs,right_or_wrong,rd_right_or_wrong
What is Web 3.0?,https://www.chainlink.education/chainlinkIntroduction/chapter-1,"In Web 1.0, the internet was a static place where web pages and content were created and owned by a single entity (i.e., a website for the news such as the New York Times, where they curated and owned all articles). In Web 2.0, which we are currently moving away from, applications are created to allow users to create their own content on web pages. This content and the web page are still owned by a single entity (think users creating content on Facebook). These web pages are well known as “Web Apps”.

Web 2.0 isn’t a fair, equitable place for the users generating all this content and data. The centralized entities who control these web apps can and have un-equitably profited from all the content that their users  generated. Enter Web 3.0: the future of the internet we are moving towards. In Web 3.0, web apps (and the content generated within them) can be created and not be controlled by any centralized entity. These decentralized apps, or Dapps, are completely open and transparent, and can distribute any generated profits more equitably.

The future of the internet, dubbed Web 3.0, is being built in front of our eyes so let's dive in and start building the future!","Web 3.0 is the future of the internet where web apps and the content generated within them can be created and not be controlled by any centralized entity. These decentralized apps, or Dapps, are completely open and transparent, and can distribute any generated profits more equitably.","#####Chapter 1:

# What will this course cover?

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
    You are a digital artist, and have heard about the NFT (Non-Fungible Token) revolution making waves through the art community. You want to take part in it, but know nothing about  the technology underpinning NFTs.
    </div>
  </div>
</ContentWrapp>

Chainlink, smart contracts, blockchains, and the entire world of cryptocurrency have been a hot topic of discussion for several years now. Whether it’s companies like [EY and Microsoft](https://consensys.net/blog/press-release/ey-and-consensys-announce-formation-of-baseline-protocol-initiative-to-make-ethereum-mainnet-safe-and-effective-for-enterprises/) looking to use smart contracts to improve their business processes, artists and athletes like [LaMelo Ball](https://blog.ether.cards/lamelo-ball-nft/) creating their own “NFTs,” or up and coming companies looking to disrupt long-standing establishments such as the [insurance](https://www.arbolmarket.com/) industry, Chainlink and smart contracts are working to become the backbone for world-changing applications.

<Spacer />

## What is Web 3.0?

In Web 1.0, the internet was a static place where web pages and content were created and owned by a single entity (i.e., a website for the news such as the New York Times, where they curated and owned all articles). In Web 2.0, which we are currently moving away from, applications are created to allow users to create their own content on web pages. This content and the web page are still owned by a single entity (think users creating content on Facebook). These web pages are well known as “Web Apps”.

Web 2.0 isn’t a fair, equitable place for the users generating all this content and data. The centralized entities who control these web apps can and have un-equitably profited from all the content that their users  generated. Enter Web 3.0: the future of the internet we are moving towards. In Web 3.0, web apps (and the content generated within them) can be created and not be controlled by any centralized entity. These decentralized apps, or Dapps, are completely open and transparent, and can distribute any generated profits more equitably.

The future of the internet, dubbed Web 3.0, is being built in front of our eyes so let's dive in and start building the future!


:::NEXT DOC:::

In Web 1.0, the internet was a static place where web pages and content were created and owned by a single entity (i.e., a website for the news such as the New York Times, where they curated and owned all articles). In Web 2.0, which we are currently moving away from, applications are created to allow users to create their own content on web pages.
",right,
What is a contractual agreement?,https://www.chainlink.education/chainlinkIntroduction/chapter-2,"Contracts are agreements that are enforceable in a court of law. You may have signed a leasing contract to rent an apartment or house. Restaurateurs typically sign contracts with food suppliers to obtain necessary ingredients at a specific price and time no matter what happens in different food markets. You may sign an employment agreement with a company to establish your pay rate and employee benefits. In any form, once these contractual agreements have been made, they are enforced by a court of law. Any clause that is not fulfilled within a contract can be disputed and discussed within the court.","A contractual agreement is an enforceable agreement that is made between parties and can be written down on paper or typed in digital documents. It is expected that if the terms of the agreement are not executed as written, they will be enforced by a court of law.","#####Chapter 2:

# What are Contracts?

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     When you buy an artwork, you sign a contract between you and the artist or seller. This contract provides you with proof of ownership of the artwork. But it is possible to forge it and not follow the agreement. The seller could decide not to send the artwork to you though you already paid for it.
    </div>
  </div>
</ContentWrapp>

Agreements, deals, promises: these are concepts that humans universally have an intuition for across cultures. Maybe you agreed to trade three of your toys for one friend’s rare toy as a child. Perhaps you’ve decided to lend your car to a friend as long as they don’t put more than 100 miles on it and return it with a full tank. You may have even agreed with your health coach not to eat more than 2,500 calories per day.

These are all examples of agreements. Agreements can be spoken orally, written down on paper, or even typed in digital documents. The enforcement of such agreements is oftentimes informal and “wishy washy.” Disagreement is handled outside of courts or other formal institutions: a friend who brings back your car with 600 miles on it and an almost empty tank of gas loses your trust. Your health coach will be very disappointed in you if you’ve eaten 5,000 calories a day for the past week. Though factors such as reputation, magnitude, and parties within an agreement can affect its enforcement, there is no guarantee that an agreement will be fulfilled.

Contracts are agreements that are enforceable in a court of law. You may have signed a leasing contract to rent an apartment or house. Restaurateurs typically sign contracts with food suppliers to obtain necessary ingredients at a specific price and time no matter what happens in different food markets. You may sign an employment agreement with a company to establish your pay rate and employee benefits. In any form, once these contractual agreements have been made, they are enforced by a court of law. Any clause that is not fulfilled within a contract can be disputed and discussed within the court.

<MissionContainer>
  <div className=""title"">Arbitration Court</div>
    <div className=""description"">
    In fact, legal contracts have become so notoriously difficult to enforce more companies have been putting ""arbitration"" clauses in their contracts. This means a private arbitration court is used to uphold the contract rather than a public judicial court. There has been a lot of controversy surrounding arbitration courts. You can read more about the history of arbitration courts in <a href=""https://www.americanbar.org/groups/tort_trial_insurance_practice/publications/the_brief/2018-19/summer/a-brief-history-arbitration/""> this article by the American Bar Association </a>.
    </div>
</MissionContainer>


:::NEXT DOC:::

#####Chapter 1:

What will this course cover?
=============================

***Chainlink, smart contracts, blockchains, and the entire world of cryptocurrency have been a hot topic of discussion for several years now.***

Whether it’s companies like EY and Microsoft looking to use smart contracts to improve their business processes, artists and athletes like LaMelo Ball creating their own“NFTs”, or up and coming companies looking to disrupt long standing industries such as insurance, Chainlink and smart contracts are looking to be the backbone for world changing applications.

The future of the internet, dubbed Web3.0, is being built in front of our eyes so let's dive in and start building the future! But wait, Chainlink? Smart contracts? Doesn’t blockchain have something to do with that Bitcoin stuff some people buy? In this course we will build up the intuition on what Chianlink is and the problems it solves.

## What are Contracts?
Agreements, deals, promises; these are concepts that humans seem to universally have an intuition on across cultures. Maybe as a child you agreed to trade 3 of your toys for 1 friend’s rare toy.

![The San Juan Mountains are beautiful!](/image_md.png ""test image"")

Or maybe you’ve agreed to lend your car to your friend as long as they don’t put more than 100 miles on it and bring it back with a full tank. Or maybe you make an agreement with your health coach that you wont eat more than 2,500 calories a day.

<BlueParagraph>
    These are all examples of agreements and agreements can be spoken orally, written down on paper, or even typed in digital documents. Enforcement of agreements are handled outside of courts: you will probably lose trust in your friend who brings back your car with 600 miles on it and an almost empty tank of gas.
</BlueParagraph>

Your health coach will be very disappointed in you if you’ve eaten 5,000 calories a day for the past week. Thus enforcement of standard agreements is often kind of “wishy washy” and based on many hard measure factors such as reputation impact.

Contracts are agreements that are enforceable in a court of law. Maybe you’ve signed a leasing contract to rent an apartment or house. Perhaps you’ve run a restaurant and signed a futures contract with food suppliers to get corn at a specific price and time no matter what happens in the corn market.

Or perhaps you’ve signed an employment agreement with the company you work for on what your pay rate will be and what benefits you will have. Either way, once these contractual agreements have been made it is expected that if they are not executed how they were written they will be enforced by a court of law i.e. a government and the power they have.
",right,
What is a digital agreement?,https://www.chainlink.education/chainlinkIntroduction/chapter-3,"Digital agreements have been the most common format of agreements in the past decade. From bank agreements to social media, to Netflix, and crypto exchanges, companies who provide services on the internet typically use digital agreements to detail the exact conditions of the service to be provided. These are called SLAs or Service Level Agreements.

What makes a digital agreement different from a regular agreement or contractual agreement? Well they’re like regular agreements….but in a digital format. These agreements can be enforced in a court of law under certain circumstances. However, this doesn’t often happen due to the costs of going to court coupled with the low value these contracts represent for individual consumers.","A digital agreement is a format of agreements used by companies who provide services on the internet to detail the exact conditions of the service to be provided. They are enforced in a court of law under certain circumstances but are often not read by customers due to lengthy, complex legalese. The power of digital agreements is heavily skewed towards the institutions who create them rather than being a fair, equitable agreement between institutions and their consumers.","#####Chapter 3:

# Digital Agreements - What we have Today

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
    When you buy an artwork on an online platform, you must agree to the Service Level Agreements. They are usually overly complex and can be challenging to understand. They primarily benefit the platform owner, not the users.
    </div>
  </div>
</ContentWrapp>

Digital agreements have been the most common format of agreements in the past decade. From bank agreements to social media, to Netflix, and crypto exchanges, companies who provide services on the internet typically use digital agreements to detail the exact conditions of the service to be provided. These are called SLAs or Service Level Agreements.

What makes a digital agreement different from a regular agreement or contractual agreement? Well they’re like regular agreements….but in a digital format. These agreements can be enforced in a court of law under certain circumstances. However, this doesn’t often happen due to the costs of going to court coupled with the low value these contracts represent for individual consumers.

Customers also tend not to read these agreements due to lengthy, complex legalese. Oftentimes digital agreements give consumers very little recourse at all! Due to these reasons, the power of digital agreements is heavily skewed towards the institutions who create them rather than being a fair, equitable agreement between institutions and their consumers. A prime example of this is the <a style=""color:blue"" href=""https://www.jama.work/blog/on-robinhood-and-availability""> Robinhood Gamestop downtime incident</a>.

<MissionContainer>
  <div className=""title"">What are the SLAs you have agreed to?</div>
    <div className=""description"">
    Think about any digital services you subscribe to, for example video streaming or banking services. Do you know the terms of the SLAs between you and the service provider? If not, take the time and read over one of them.
    </div>
</MissionContainer>


:::NEXT DOC:::

Smart contracts result from the evolution of digital agreements. A Smart contract is a self-executing contract with the terms of the agreement being directly written into computer code.
",right,
What are Service Level Agreements?`,https://www.chainlink.education/chainlinkIntroduction/chapter-3,"Digital agreements have been the most common format of agreements in the past decade. From bank agreements to social media, to Netflix, and crypto exchanges, companies who provide services on the internet typically use digital agreements to detail the exact conditions of the service to be provided. These are called SLAs or Service Level Agreements.

What makes a digital agreement different from a regular agreement or contractual agreement? Well they’re like regular agreements….but in a digital format. These agreements can be enforced in a court of law under certain circumstances. However, this doesn’t often happen due to the costs of going to court coupled with the low value these contracts represent for individual consumers.","Service Level Agreements (SLAs) are agreements that customers must agree to when buying a service on an online platform. They detail the exact conditions of the service to be provided and are typically overly complex and challenging to understand. They primarily benefit the platform owner, not the users.","When you buy an artwork on an online platform, you must agree to the Service Level Agreements. They are usually overly complex and can be challenging to understand. They primarily benefit the platform owner, not the users.


:::NEXT DOC:::

#####Chapter 3:

# Digital Agreements - What we have Today

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
    When you buy an artwork on an online platform, you must agree to the Service Level Agreements. They are usually overly complex and can be challenging to understand. They primarily benefit the platform owner, not the users.
    </div>
  </div>
</ContentWrapp>

Digital agreements have been the most common format of agreements in the past decade. From bank agreements to social media, to Netflix, and crypto exchanges, companies who provide services on the internet typically use digital agreements to detail the exact conditions of the service to be provided. These are called SLAs or Service Level Agreements.

What makes a digital agreement different from a regular agreement or contractual agreement? Well they’re like regular agreements….but in a digital format. These agreements can be enforced in a court of law under certain circumstances. However, this doesn’t often happen due to the costs of going to court coupled with the low value these contracts represent for individual consumers.

Customers also tend not to read these agreements due to lengthy, complex legalese. Oftentimes digital agreements give consumers very little recourse at all! Due to these reasons, the power of digital agreements is heavily skewed towards the institutions who create them rather than being a fair, equitable agreement between institutions and their consumers. A prime example of this is the <a style=""color:blue"" href=""https://www.jama.work/blog/on-robinhood-and-availability""> Robinhood Gamestop downtime incident</a>.

<MissionContainer>
  <div className=""title"">What are the SLAs you have agreed to?</div>
    <div className=""description"">
    Think about any digital services you subscribe to, for example video streaming or banking services. Do you know the terms of the SLAs between you and the service provider? If not, take the time and read over one of them.
    </div>
</MissionContainer>
",right,
What makes a digital agreement different from a regular agreement or contractual agreement?,https://www.chainlink.education/chainlinkIntroduction/chapter-3,"Well they’re like regular agreements….but in a digital format. These agreements can be enforced in a court of law under certain circumstances. However, this doesn’t often happen due to the costs of going to court coupled with the low value these contracts represent for individual consumers.","A digital agreement is like a regular agreement but in a digital format and can be enforced in a court of law under certain circumstances. However, customers tend not to read these agreements due to lengthy, complex legalese, and digital agreements give consumers very little recourse at all, making the power of digital agreements heavily skewed towards the institutions who create them rather than being a fair, equitable agreement between institutions and their consumers.","#####Chapter 3:

# Digital Agreements - What we have Today

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
    When you buy an artwork on an online platform, you must agree to the Service Level Agreements. They are usually overly complex and can be challenging to understand. They primarily benefit the platform owner, not the users.
    </div>
  </div>
</ContentWrapp>

Digital agreements have been the most common format of agreements in the past decade. From bank agreements to social media, to Netflix, and crypto exchanges, companies who provide services on the internet typically use digital agreements to detail the exact conditions of the service to be provided. These are called SLAs or Service Level Agreements.

What makes a digital agreement different from a regular agreement or contractual agreement? Well they’re like regular agreements….but in a digital format. These agreements can be enforced in a court of law under certain circumstances. However, this doesn’t often happen due to the costs of going to court coupled with the low value these contracts represent for individual consumers.

Customers also tend not to read these agreements due to lengthy, complex legalese. Oftentimes digital agreements give consumers very little recourse at all! Due to these reasons, the power of digital agreements is heavily skewed towards the institutions who create them rather than being a fair, equitable agreement between institutions and their consumers. A prime example of this is the <a style=""color:blue"" href=""https://www.jama.work/blog/on-robinhood-and-availability""> Robinhood Gamestop downtime incident</a>.

<MissionContainer>
  <div className=""title"">What are the SLAs you have agreed to?</div>
    <div className=""description"">
    Think about any digital services you subscribe to, for example video streaming or banking services. Do you know the terms of the SLAs between you and the service provider? If not, take the time and read over one of them.
    </div>
</MissionContainer>


:::NEXT DOC:::

#####Chapter 2:

# What are Contracts?

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     When you buy an artwork, you sign a contract between you and the artist or seller. This contract provides you with proof of ownership of the artwork. But it is possible to forge it and not follow the agreement. The seller could decide not to send the artwork to you though you already paid for it.
    </div>
  </div>
</ContentWrapp>

Agreements, deals, promises: these are concepts that humans universally have an intuition for across cultures. Maybe you agreed to trade three of your toys for one friend’s rare toy as a child. Perhaps you’ve decided to lend your car to a friend as long as they don’t put more than 100 miles on it and return it with a full tank. You may have even agreed with your health coach not to eat more than 2,500 calories per day.

These are all examples of agreements. Agreements can be spoken orally, written down on paper, or even typed in digital documents. The enforcement of such agreements is oftentimes informal and “wishy washy.” Disagreement is handled outside of courts or other formal institutions: a friend who brings back your car with 600 miles on it and an almost empty tank of gas loses your trust. Your health coach will be very disappointed in you if you’ve eaten 5,000 calories a day for the past week. Though factors such as reputation, magnitude, and parties within an agreement can affect its enforcement, there is no guarantee that an agreement will be fulfilled.

Contracts are agreements that are enforceable in a court of law. You may have signed a leasing contract to rent an apartment or house. Restaurateurs typically sign contracts with food suppliers to obtain necessary ingredients at a specific price and time no matter what happens in different food markets. You may sign an employment agreement with a company to establish your pay rate and employee benefits. In any form, once these contractual agreements have been made, they are enforced by a court of law. Any clause that is not fulfilled within a contract can be disputed and discussed within the court.

<MissionContainer>
  <div className=""title"">Arbitration Court</div>
    <div className=""description"">
    In fact, legal contracts have become so notoriously difficult to enforce more companies have been putting ""arbitration"" clauses in their contracts. This means a private arbitration court is used to uphold the contract rather than a public judicial court. There has been a lot of controversy surrounding arbitration courts. You can read more about the history of arbitration courts in <a href=""https://www.americanbar.org/groups/tort_trial_insurance_practice/publications/the_brief/2018-19/summer/a-brief-history-arbitration/""> this article by the American Bar Association </a>.
    </div>
</MissionContainer>
",right,
What is wrong with using centralized oracles?,https://www.chainlink.education/chainlinkIntroduction/chapter-5,"To create functional smart contracts we need a middleware system called an Oracle, but how will we make this Oracle? Well, we are trying to get price data into our smart contract for NFTs. My friend Jim (trust me, he is good!) is an expert in cryptocurrency prices, and he even has a server set up that we can access for price data. Awesome, we'll make Jim our oracle and he will provide price data to our NFT smart contract.

But wait….didn’t all the great properties of smart contracts and blockchains come from their decentralized nature? What if Jim wanted to maliciously send our smart contract bad price data so he could manipulate it in his favor? What if his server goes offline when the NFT needs to update and thus can’t? What if Jim isn’t even malicious but gets hacked by a malicious actor? This single oracle solution isn’t solving much of the oracle problem because it isn’t decentralized, and thus provides a weak link that ruins all of those awesome smart contract properties. You need to trust that Jim, and my word on Jim, that he is a great person and will act in the best interest of everyone. But what if we had a decentralized middleware solution, one where Jim doesn’t control everything (sorry Jim), so we didn’t have to trust him?","Using centralized oracles provides a weak link that ruins the decentralized nature of smart contracts and blockchains, as it requires trust in a single entity or source of data. This can lead to potential issues such as malicious manipulation of data or server downtime.","#####Chapter 5:

# The Smart Contract Connectivity Problem

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     NFTs are a part of Web 3.0 so why not take truly advantage of this new primitive and make your NFT change depending on some conditions on the outside world? We call these changing NFTs <i>Dynamic NFT</i> or <i>dNFTs</i>. But how will you connect your dynamic NFT to outside data?  
    </div>
  </div>
</ContentWrapp>

Blockchains and smart contracts are unaware of any conditions or logic that occur outside of the blockchain itself; they cannot connect to outside resources. This is due to the distributed and deterministic nature of blockchains. All of the distributed nodes (nodes are computers running the blockchain software) in the blockchain must come to a consensus on what the blockchain is and any changes to it. If the blockchain just connected to a data source, the nodes could query the data at different times and get other answers, breaking the ability for the nodes to reach consensus. Even worse, if that data source changed locations or is down, the whole blockchain would break.

This means developers can program smart contracts as long as their logic doesn’t require any outside data. This may sound highly limiting, but there is a system in place that sits in between blockchains and the outside world (a concept aptly called “middleware”). This middleware system is called an Oracle. The name <ColorWord>Oracle</ColorWord> comes from the Greek concept of an Oracle since it needs to determine what is <i>true</i> in outside systems.

<Spacer>

## Centralized Oracles

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     So an Oracle is the type of system you want to make a dNFT but it is important that the entire NFT remains decentralized so your art work can truly live on forever. You'll also want the NFT to be have the most accurate up-to-date data.
    </div>
  </div>
</ContentWrapp>

To create functional smart contracts we need a middleware system called an <ColorWord>Oracle</ColorWord>, but how will we make this Oracle? Well, we are trying to get price data into our smart contract for NFTs. My friend Jim (trust me, he is good!) is an expert in cryptocurrency prices, and he even has a server set up that we can access for price data. Awesome, we'll make Jim our oracle and he will provide price data to our NFT smart contract.

But wait….didn’t all the great properties of smart contracts and blockchains come from their decentralized nature? What if Jim wanted to maliciously send our smart contract bad price data so he could manipulate it in his favor? What if his server goes offline when the NFT needs to update and thus can’t? What if Jim isn’t even malicious but gets hacked by a malicious actor? This single oracle solution isn’t solving much of the oracle problem because it isn’t <i>decentralized</i>, and thus provides a weak link that ruins all of those awesome smart contract properties. You need to trust that Jim, and my word on Jim, that he is a great person and will act in the best interest of everyone. But what if

:::NEXT DOC:::

Smart contracts have special properties and need decentralized oracles to carry out functions. This is where Chainlink comes in. Chainlink is a platform for creating decentralized oracle networks that provide various smart contract services. So using Chainlink, we can create a price oracle that isn’t just Jim but Jim and 30 other of the most trusted and expert crypto price data aggregators out there and make them come to an agreement.
",right,
When do decentralized oracle networks (DONs) Provide Data,https://www.chainlink.education/chainlinkIntroduction/chapter-5,"Chainlink allows developers to create and customize any type of Decentralized Oracle Network, or DONs, a smart contract might need. Developers can choose which nodes are a part of a network, what type of data each node is looking for, how nodes come to an agreement, when nodes should post updates, and any other computation nodes should perform. Finally, with Chainlink, developers can build smart contracts that can interact with the outside world to preserve the decentralized nature of smart contracts.","Decentralized oracle networks (DONs) provide data based on a specified heartbeat and deviation threshold, which determines how often and under what conditions the data is updated and posted on-chain.","he will provide price data to our NFT smart contract.

But wait….didn’t all the great properties of smart contracts and blockchains come from their decentralized nature? What if Jim wanted to maliciously send our smart contract bad price data so he could manipulate it in his favor? What if his server goes offline when the NFT needs to update and thus can’t? What if Jim isn’t even malicious but gets hacked by a malicious actor? This single oracle solution isn’t solving much of the oracle problem because it isn’t <i>decentralized</i>, and thus provides a weak link that ruins all of those awesome smart contract properties. You need to trust that Jim, and my word on Jim, that he is a great person and will act in the best interest of everyone. But what if we had a decentralized middleware solution, one where Jim doesn’t control everything (sorry Jim), so we didn’t have to trust him?

Finally we are here…...enter Chainlink!

<Spacer>

## Chainlink and Decentralized Oracles

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     Using a Chainlink Decentralized Oracle Network (DON) as the Oracle for your dNFT can give you strong guarantees that your artwork will truly update with the latest, most acurate data and remain decentralized. 
    </div>
  </div>
</ContentWrapp>

Smart contracts have special properties and need decentralized oracles to carry out functions. This is where Chainlink comes in. <ColorWord>Chainlink is a platform for creating decentralized oracle networks that provide various smart contract services</ColorWord>. So using Chainlink, we can create a price oracle that isn’t just Jim but Jim and 30 other of the most trusted and expert crypto price data aggregators out there and make them come to an agreement.

Chainlink allows developers to create and customize any type of <ColorWord>Decentralized Oracle Network</ColorWord>, or DONs, a smart contract might need. Developers can choose which nodes are a part of a network, what type of data each node is looking for, how nodes come to an agreement, when nodes should post updates, and any other computation nodes should perform. Finally, with Chainlink, developers can build smart contracts that can interact with the outside world to preserve the decentralized nature of smart contracts.

<Spacer>

## How Chainlink Works

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
      Curious how Chainlink works? Read below! With Chainlink, any type of data the exists can be brought on chain, and the conditions on which that data is delivered can be customized! 
    </div>
  </div>
</ContentWrapp>

Chainlink allows developers to build and customize DONs. Chainlink allows DONs to work and assures that node operators are incentivized not to collude or act maliciously.

<p><ColorWord>How does Chainlink Work?</ColorWord></p>

<div>
  <p>Developers can customize several main areas of Chainlink DONs. These include:</p>
  <ul>
    <li>
      <p>Specifying what data DONs need to

:::NEXT DOC:::

<div class=""item-text"">
      Curious how Chainlink works? Read below! With Chainlink, any type of data the exists can be brought on chain, and the conditions on which that data is delivered can be customized! 
    </div>
  </div>
</ContentWrapp>

Chainlink allows developers to build and customize DONs. Chainlink allows DONs to work and assures that node operators are incentivized not to collude or act maliciously.

<p><ColorWord>How does Chainlink Work?</ColorWord></p>

<div>
  <p>Developers can customize several main areas of Chainlink DONs. These include:</p>
  <ul>
    <li>
      <p>Specifying what data DONs need to provide</p>
    </li>
    <li>
      <p>How DONs retrieve data </p>
    </li>
    <li>
      <p>When DONs provide data</p>
    </li>
    <li>
      <p>How agreement (also known as consensus) is achieved among the nodes to achieve a single source of truth for the specified data.</p>
    </li>
  </ul>
</div>

###Each step is outlined in more detail below:

<br><br>
<b>Specifying what data DONs need to provide</b>

Due to the proliferation of Decentralized Finance (DeFi), a popular use case of Chainlink DONs is relating them with price data. However, any type of data that is available in a digital format can be accessed. This includes but is not limited to weather data, YouTube views, sensor data, or even data from other blockchains. For the NFT we’re just going to stick to price data for now, specifically the ETH/USD price, but you can imagine all the possibilities of cool smart contracts we can make with all of the digital data available today!

<br>
<b>When DONS Provide Data</b>

Some applications require a DON that updates the data once a day. Others need updates once every five minutes or only when the data itself changes by a certain amount. The term <ColorWord>heartbeat</ColorWord> is used to describe the max amount of time that can elapse before a DON updates it's data feed The term <ColorWord>deviation threshold</ColorWord> is used to describe how much variation is allowed in the data before it is posted on-chain, regardless of how much time has elasped. For example, if the ETH/USD deviation threshold is set to 1%, then the DON will update the data feed if it senses the price of ETH versus USD fluctuates more than 1%.

<br>
<b>How DONs Provide Data</b>

Ideally, nodes should retrieve data from multiple sources and <i>aggregate</i>, or combine, the data to return the most accurate price they can. Developers can use external adapters to customize the sources that nodes use to aggregate data. <ColorWord>External adapters</ColorWord> are custom built software packages that can be added to the nodes. These can be built in any programming language and perform any operations developers may find useful. These operations can be as simple as basic arithmetic but can span to being complex machine learning algorithms.

<br>
<b>How Consensus is Reached Among Nodes</b>

All of the different nodes in the DON have their own version of the price. Using this information, developers customize the aggregation method of Chainlink DONs to determine one value for the true price. This is another level of aggregation beyond the aggregation completed at the individual node level. Having multiple levels of aggregation ensures the highest level of data quality. This",right,
How  do decentralized oracle networks (DONs) Provide Data,https://www.chainlink.education/chainlinkIntroduction/chapter-5,"Chainlink allows developers to build and customize DONs. Chainlink allows DONs to work and assures that node operators are incentivized not to collude or act maliciously.

How does Chainlink Work?

Developers can customize several main areas of Chainlink DONs. These include:

Specifying what data DONs need to provide

How DONs retrieve data 

When DONs provide data

How agreement (also known as consensus) is achieved among the nodes to achieve a single source of truth for the specified data.","Decentralized oracle networks (DONs) provide data by specifying what data is needed, when it should be provided, how it should be retrieved, and how consensus is reached among the nodes to achieve a single source of truth for the specified data. Nodes retrieve data from multiple sources and aggregate the data to return the most accurate price they can. Developers can use external adapters to customize the sources that nodes use to aggregate data. All of the different nodes in the DON have their own version of the price, and using this information, developers customize the aggregation method of Chainlink DONs to determine one value for the true price. This is another level of aggregation beyond the aggregation completed at the individual node level. Having multiple levels of aggregation ensures the highest level of data quality.","<div class=""item-text"">
      Curious how Chainlink works? Read below! With Chainlink, any type of data the exists can be brought on chain, and the conditions on which that data is delivered can be customized! 
    </div>
  </div>
</ContentWrapp>

Chainlink allows developers to build and customize DONs. Chainlink allows DONs to work and assures that node operators are incentivized not to collude or act maliciously.

<p><ColorWord>How does Chainlink Work?</ColorWord></p>

<div>
  <p>Developers can customize several main areas of Chainlink DONs. These include:</p>
  <ul>
    <li>
      <p>Specifying what data DONs need to provide</p>
    </li>
    <li>
      <p>How DONs retrieve data </p>
    </li>
    <li>
      <p>When DONs provide data</p>
    </li>
    <li>
      <p>How agreement (also known as consensus) is achieved among the nodes to achieve a single source of truth for the specified data.</p>
    </li>
  </ul>
</div>

###Each step is outlined in more detail below:

<br><br>
<b>Specifying what data DONs need to provide</b>

Due to the proliferation of Decentralized Finance (DeFi), a popular use case of Chainlink DONs is relating them with price data. However, any type of data that is available in a digital format can be accessed. This includes but is not limited to weather data, YouTube views, sensor data, or even data from other blockchains. For the NFT we’re just going to stick to price data for now, specifically the ETH/USD price, but you can imagine all the possibilities of cool smart contracts we can make with all of the digital data available today!

<br>
<b>When DONS Provide Data</b>

Some applications require a DON that updates the data once a day. Others need updates once every five minutes or only when the data itself changes by a certain amount. The term <ColorWord>heartbeat</ColorWord> is used to describe the max amount of time that can elapse before a DON updates it's data feed The term <ColorWord>deviation threshold</ColorWord> is used to describe how much variation is allowed in the data before it is posted on-chain, regardless of how much time has elasped. For example, if the ETH/USD deviation threshold is set to 1%, then the DON will update the data feed if it senses the price of ETH versus USD fluctuates more than 1%.

<br>
<b>How DONs Provide Data</b>

Ideally, nodes should retrieve data from multiple sources and <i>aggregate</i>, or combine, the data to return the most accurate price they can. Developers can use external adapters to customize the sources that nodes use to aggregate data. <ColorWord>External adapters</ColorWord> are custom built software packages that can be added to the nodes. These can be built in any programming language and perform any operations developers may find useful. These operations can be as simple as basic arithmetic but can span to being complex machine learning algorithms.

<br>
<b>How Consensus is Reached Among Nodes</b>

All of the different nodes in the DON have their own version of the price. Using this information, developers customize the aggregation method of Chainlink DONs to determine one value for the true price. This is another level of aggregation beyond the aggregation completed at the individual node level. Having multiple levels of aggregation ensures the highest level of data quality. This

:::NEXT DOC:::

he will provide price data to our NFT smart contract.

But wait….didn’t all the great properties of smart contracts and blockchains come from their decentralized nature? What if Jim wanted to maliciously send our smart contract bad price data so he could manipulate it in his favor? What if his server goes offline when the NFT needs to update and thus can’t? What if Jim isn’t even malicious but gets hacked by a malicious actor? This single oracle solution isn’t solving much of the oracle problem because it isn’t <i>decentralized</i>, and thus provides a weak link that ruins all of those awesome smart contract properties. You need to trust that Jim, and my word on Jim, that he is a great person and will act in the best interest of everyone. But what if we had a decentralized middleware solution, one where Jim doesn’t control everything (sorry Jim), so we didn’t have to trust him?

Finally we are here…...enter Chainlink!

<Spacer>

## Chainlink and Decentralized Oracles

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     Using a Chainlink Decentralized Oracle Network (DON) as the Oracle for your dNFT can give you strong guarantees that your artwork will truly update with the latest, most acurate data and remain decentralized. 
    </div>
  </div>
</ContentWrapp>

Smart contracts have special properties and need decentralized oracles to carry out functions. This is where Chainlink comes in. <ColorWord>Chainlink is a platform for creating decentralized oracle networks that provide various smart contract services</ColorWord>. So using Chainlink, we can create a price oracle that isn’t just Jim but Jim and 30 other of the most trusted and expert crypto price data aggregators out there and make them come to an agreement.

Chainlink allows developers to create and customize any type of <ColorWord>Decentralized Oracle Network</ColorWord>, or DONs, a smart contract might need. Developers can choose which nodes are a part of a network, what type of data each node is looking for, how nodes come to an agreement, when nodes should post updates, and any other computation nodes should perform. Finally, with Chainlink, developers can build smart contracts that can interact with the outside world to preserve the decentralized nature of smart contracts.

<Spacer>

## How Chainlink Works

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
      Curious how Chainlink works? Read below! With Chainlink, any type of data the exists can be brought on chain, and the conditions on which that data is delivered can be customized! 
    </div>
  </div>
</ContentWrapp>

Chainlink allows developers to build and customize DONs. Chainlink allows DONs to work and assures that node operators are incentivized not to collude or act maliciously.

<p><ColorWord>How does Chainlink Work?</ColorWord></p>

<div>
  <p>Developers can customize several main areas of Chainlink DONs. These include:</p>
  <ul>
    <li>
      <p>Specifying what data DONs need to",right,
how can I take advantage of decentralized oracle networks (DONs) in my own smart contracts,https://www.chainlink.education/chainlinkIntroduction/chapter-6,"Chainlink is open source so there’s always the option of making your own DON, but creating a DON is a complex and nuanced process. Instead, in the spirit of the old developer adage “Never build something twice”, use existing DONs if possible.","You can take advantage of decentralized oracle networks (DONs) in your own smart contracts by using Chainlink, a platform for creating DONs that provide various smart contract services. With Chainlink, you can create a price oracle that involves multiple trusted and expert crypto price data aggregators, rather than relying on a single centralized oracle. Developers can customize and build DONs with Chainlink, specifying what data is needed, how nodes come to an agreement, when nodes should post updates, and any other computation nodes should perform. Using Chainlink DONs can provide strong guarantees that your smart contract will remain decentralized and update with the latest, most accurate data.","Smart contracts have special properties and need decentralized oracles to carry out functions. This is where Chainlink comes in. Chainlink is a platform for creating decentralized oracle networks that provide various smart contract services. So using Chainlink, we can create a price oracle that isn’t just Jim but Jim and 30 other of the most trusted and expert crypto price data aggregators out there and make them come to an agreement.


:::NEXT DOC:::

he will provide price data to our NFT smart contract.

But wait….didn’t all the great properties of smart contracts and blockchains come from their decentralized nature? What if Jim wanted to maliciously send our smart contract bad price data so he could manipulate it in his favor? What if his server goes offline when the NFT needs to update and thus can’t? What if Jim isn’t even malicious but gets hacked by a malicious actor? This single oracle solution isn’t solving much of the oracle problem because it isn’t <i>decentralized</i>, and thus provides a weak link that ruins all of those awesome smart contract properties. You need to trust that Jim, and my word on Jim, that he is a great person and will act in the best interest of everyone. But what if we had a decentralized middleware solution, one where Jim doesn’t control everything (sorry Jim), so we didn’t have to trust him?

Finally we are here…...enter Chainlink!

<Spacer>

## Chainlink and Decentralized Oracles

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
     Using a Chainlink Decentralized Oracle Network (DON) as the Oracle for your dNFT can give you strong guarantees that your artwork will truly update with the latest, most acurate data and remain decentralized. 
    </div>
  </div>
</ContentWrapp>

Smart contracts have special properties and need decentralized oracles to carry out functions. This is where Chainlink comes in. <ColorWord>Chainlink is a platform for creating decentralized oracle networks that provide various smart contract services</ColorWord>. So using Chainlink, we can create a price oracle that isn’t just Jim but Jim and 30 other of the most trusted and expert crypto price data aggregators out there and make them come to an agreement.

Chainlink allows developers to create and customize any type of <ColorWord>Decentralized Oracle Network</ColorWord>, or DONs, a smart contract might need. Developers can choose which nodes are a part of a network, what type of data each node is looking for, how nodes come to an agreement, when nodes should post updates, and any other computation nodes should perform. Finally, with Chainlink, developers can build smart contracts that can interact with the outside world to preserve the decentralized nature of smart contracts.

<Spacer>

## How Chainlink Works

<ContentWrapp>
  <div class=""imgContainer"">
    <img alt=""story_image_2_0"" src=""/images/chapter/man.svg"" width=""150px"" height=""150px"">
  </div>

  <div class=""itemsContainer"">
    <div class=""item-text"">
      Curious how Chainlink works? Read below! With Chainlink, any type of data the exists can be brought on chain, and the conditions on which that data is delivered can be customized! 
    </div>
  </div>
</ContentWrapp>

Chainlink allows developers to build and customize DONs. Chainlink allows DONs to work and assures that node operators are incentivized not to collude or act maliciously.

<p><ColorWord>How does Chainlink Work?</ColorWord></p>

<div>
  <p>Developers can customize several main areas of Chainlink DONs. These include:</p>
  <ul>
    <li>
      <p>Specifying what data DONs need to",right,
What workflow.yaml file can I use for brownie? ,https://stackoverflow.com/questions/76442258/brownie-github-actions-workflow,,There is no information provided in the context about a specific workflow.yaml file for brownie.,"   
    
    dependencies:
       # - <organization/repo>@<version>
           - smartcontractkit/chainlink-brownie-contracts@1.1.1
                 compiler:
                        solc:
                       remappings:
                                                     
                            - '@chainlink=smartcontractkit/chainlink-brownie-contracts@1.1.1'
    



Answers:
(Answered on: 2022-05-30 00:12:40)


I started over. I guess I forgot a step in the file creation, and fixed some
formatting issues in the brownie-config,yaml file. I am all set. I resolved my
issues here.





:::NEXT DOC:::

   


---
(Answered on: 2021-07-22 07:23:49)


As per this <https://eth-brownie.readthedocs.io/en/stable/install.html>

Brownie is depends on some dependencies

  1. python3 version 3.6 or greater, python3-dev

  2. ganache-cli - tested with version 6.12.2

please check this go through this documentation


---
(Answered on: 2021-07-15 12:19:59)


Going by the stack trace you posted, it looks like you're trying to initialise
brownie a folder in a folder that does not yet exist. The `FileNotFoundError`
is thrown when there are parent-folders that don't exist yet in the path (see
[Python docs for mkdir
here](https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir)),
which is likely what's happening here.

I can reproduce this error by doing `brownie init ~/test-folder-that-
doesn't-exist/brownie`, where brownie and test-folder-doesn't-exist both are
directories that are yet to be made. but doing `brownie init ~/brownie` does
work (even if brownie has not been made yet)

Hope this helps!



",wrong,wrong
Why does 'Maximum number of redirects exceeded' error when connecting to the OpenAI API,https://stackoverflow.com/questions/76218239/why-maximum-number-of-redirects-exceeded-error-when-connecting-to-the-openai-a,,"The 'Maximum number of redirects exceeded' error occurs when connecting to the OpenAI API due to a possible syntax error in the request itself. The error may be resolved by adjusting the code to include quotes around certain parameters such as Authorization, model, prompt, temperature, and max_tokens.","Question: (Asked on: 2023-05-10 12:08:23)
Why &#39;Maximum number of redirects exceeded&#39; error when connecting to the OpenAI API
URL: https://stackoverflow.com/questions/76218239/why-maximum-number-of-redirects-exceeded-error-when-connecting-to-the-openai-a

Question Body:


When I attempt to use the following code to interface with the OpenAI API by
chainlink functions, I encounter an error stating 'Maximum number of redirects
exceeded'. Here is the code I am using:

    
    
    const prompt = args[0]
    
    if (!secrets.openaiKey) {
      throw Error(""Need to set OPENAI_KEY environment variable"")
    }
    
    const openAIRequest = Functions.makeHttpRequest({
      url: ""https://api.openai.com/v1/completions"",
      method: ""POST"",
      headers: {
        Authorization: `Bearer ${secrets.openaiKey}`,
      },
      data: {
        model: ""text-davinci-003"",
        prompt: prompt,
        temperature: 1,
        max_tokens: 512,
      },
    })
    
    const [openAiResponse] = await Promise.all([openAIRequest])
    console.log(""raw response"", openAiResponse)
    
    const result = openAiResponse.data.choices[0].text
    return Functions.encodeString(result)
    

The error is: [enter image description
here](https://i.stack.imgur.com/6kAHf.png)

I am not sure why this is happening. Any help would be greatly appreciated.

this prompt is ""Say this is a test in one line""



Answers:
(Answered on: 2023-05-11 09:26:48)


It's possible that the error is caused by some syntax error in the request
itself. Can you try to adjust your code to look like this?

    
    
    const openAIRequest = Functions.makeHttpRequest({
        url: ""https://api.openai.com/v1/completions"",
        method: ""POST"",
        headers: {
          'Authorization': `Bearer ${secrets.openaiKey}`,
        },
        data: {
          ""model"": ""text-davinci-003"",
          ""prompt"": prompt,
          ""temperature"": 1,
          ""max_tokens"": 512,
        },
      })
    

(Notice quotes around `Authorization`, `model`, `prompt`, `temperature`, and
`max_tokens`)





:::NEXT DOC:::

Question: (Asked on: 2023-03-20 23:59:34)
Chainlink jobs returns error if external adapter takes too long for response
URL: https://stackoverflow.com/questions/75796310/chainlink-jobs-returns-error-if-external-adapter-takes-too-long-for-response

Question Body:


I am encountering this error when running a job via my own chainlink node even
though the external adapter is returning the data properly. `HTTP request
timed out or interrupted` This error is triggered during the ""fetch"" function
of the job. I have figured that the error is triggered because my external
adapter is taking some time to respond. Is there any way I can make my
chainlink node wait longer?

I tried a response with dummy data that did not require any API to fetch and
the job ran perfectly. The error has been fixed by the given answer.

However now after the job sends the data back to my oracle,
FulfillOracleRequest2 is not executing.
[](https://i.stack.imgur.com/naP0g.png)



Answers:
(Answered on: 2023-03-21 12:09:25)


Try increasing the DEFAULT_HTTP_TIMEOUT setting in your nodes configuration

<https://docs.chain.link/chainlink-
nodes/v1/configuration#default_http_timeout>



",partial,right
How to run test for ETH to USD conversion with chainlink?,https://stackoverflow.com/questions/76116055/how-to-run-test-for-eth-to-usd-conversion-with-chainlink,,"The question is asking for guidance on how to run a test for ETH to USD conversion with Chainlink. The code provided includes a Bank contract that has a function to convert ETH to USD using the Chainlink AggregatorV3Interface. The test code is also provided, but the issue is with the last two lines where the test is trying to print out the USD amount a user has in their account. The error message ""VM Exception while processing transaction: revert"" is being encountered when trying to call the convertToUSD function. The answer provided suggests that the issue is with using the wrong Chainlink address for the conversion and that the correct address needs to be used when testing with the contract deployed on the correct testnet.","Question: (Asked on: 2023-04-27 01:03:24)
How to run test for ETH to USD conversion with chainlink?
URL: https://stackoverflow.com/questions/76116055/how-to-run-test-for-eth-to-usd-conversion-with-chainlink

Question Body:


I have the following code for Bank.sol

    
    
    // SPDX-License-Identifier: MIT
    pragma solidity >=0.4.22 <0.9.0;
    
    import ""@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol"";
    import ""@openzeppelin/contracts/token/ERC20/IERC20.sol"";
    import ""@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol"";
    import ""@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol"";
    import ""@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol"";
    
    contract Bank is Initializable, AccessControlUpgradeable {
        // Code to handle two different roles: Manager and User
        bytes32 public constant MANAGER_ROLE = keccak256(""MANAGER_ROLE"");
        bytes32 public constant USER_ROLE = keccak256(""USER_ROLE"");
        mapping(address => uint256) private _balances;
    
    
        // Code for initializer
        function initialize() public initializer {
    
        }
    
        function deposit() public payable {
            _balances[msg.sender] += msg.value;
    
        }
    
        function convertToUSD(address account) public view returns (uint256) {
            uint256 ethAmount = _balances[account];
            int256 price = getLatestPrice();
            uint256 usdAmount = uint256(price) * ethAmount / 1e18;
            return usdAmount;
        }
    
        function getLatestPrice() public view returns (int256) {
            AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);
            (, int256 price, , , ) = priceFeed.latestRoundData();
            return price;
        }
    
        function balanceOf(address account) public view returns (uint256) {
            return _balances[account];
        }
    
        function withdraw(uint _amount) public {
            require (_balances[msg.sender] >= _amount, ""Insufficient balance"");
            _balances[msg.sender] -= _amount;
            (bool sent,) = msg.sender.call{value: _amount}(""sent"");
            require(sent, ""Failed to Complete"");
    

:::NEXT DOC:::

    }
    
        function balanceOf(address account) public view returns (uint256) {
            return _balances[account];
        }
    
        function withdraw(uint _amount) public {
            require (_balances[msg.sender] >= _amount, ""Insufficient balance"");
            _balances[msg.sender] -= _amount;
            (bool sent,) = msg.sender.call{value: _amount}(""sent"");
            require(sent, ""Failed to Complete"");
        }
    }
    

And I am trying to run a test for it using Truffle

    
    
    const Bank = artifacts.require('Bank.sol')
    
    contract(""Bank"", async accounts => {
        it(""User should be able to deposit funds"", async () => {
            const bank = await Bank.new()
            const depositer = accounts[1]
            const amount = web3.utils.toWei('10', 'ether')
            await bank.deposit({from: depositer, value: amount})
            let balance = await bank.balanceOf(depositer)
            balance = parseInt(web3.utils.fromWei(balance, 'ether'))
            assert.equal(balance, 10)
            let usd = await bank.convertToUSD(depositer)
            console.log(usd)
        })
    })
    

The test works without the last 2 lines. However, I am trying to get the code
to print out in USD, the amount a user has in his account. For some reason, I
am getting a `VM Exception while processing transaction: revert` error on
bank.convertToUSD(depositer)

It would be great if someone could shed light on what I may have done wrong as
it is my first time learning this. Thank you!



Answers:
(Answered on: 2023-04-27 19:08:13)


I found the solution. When using chainlink, you need to specifically choose
what address from chainlink you want to do your conversion with, and when you
do normal testing, it is done locally where such an address doesn't exist. The
problem is fixed when you use the correct address and test it with the
contract being deployed on the correct testnet.



",wrong,right
